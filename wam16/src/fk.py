# -*- coding: utf-8 -*-
"""fk.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X4g7E03YD2KsA5RxrXo5jU3q9FA63KqI
"""

# Commented out IPython magic to ensure Python compatibility.
 !pip install simpy
import sympy as sym
# %matplotlib inline
sym.init_printing()
from sympy import *
import numpy as np

theta1, theta2, theta3, theta4, theta5, theta6, theta7, theta8 = sym.symbols("theta_1, theta_2, theta_3, theta_4, theta_5, theta_6, theta_7, theta_8")

# function to get a transformation matrix from input dh parameters
Q, al = sym.symbols('Q al')
def dh(a,al,d,Q):
  DH = sym.Matrix([[sym.cos(Q), -(sym.sin(Q))*(sym.cos(al)), (sym.sin(Q))*(sym.sin(al)), a*(sym.cos(Q))],[sym.sin(Q), sym.cos(Q)*sym.cos(al), -sym.cos(Q)*sym.sin(al), a*sym.sin(Q)],[0, sym.sin(al), sym.cos(al), d], [0, 0, 0, 1]])
  return DH

from prettytable import PrettyTable
dhtable = PrettyTable(["i","ai","alphai","di","thetai"])
dhtable.add_row(["1","0","-pi/2","0","theta1"])
dhtable.add_row(["2","0","pi/2","0","theta2"])
dhtable.add_row(["3","0.045","-pi/2","0.55","theta3"])
dhtable.add_row(["4","âˆ’0.045","pi/2","0","theta4"])
dhtable.add_row(["5","0","-pi/2","0.3","theta5"])
dhtable.add_row(["6","0","pi/2","0","theta6"])
dhtable.add_row(["7","0","0","0","theta7"])
dhtable.add_row(["8","0","0","0.06","theta8"])
dhtable.add_row(["E","0","0","0.15","0"])  
print(dhtable)

A01=dh(0,-pi/2,0,theta1)
A01

A12=dh(0,pi/2,0,theta2)
A12

A23=dh(0.045,pi/2,0.55,theta3)
A23

A34=dh(-0.45,pi/2,0,theta4)
A34

A45=dh(0,-pi/2,0.3,theta5)
A45

A56=dh(0,pi/2,0,theta6)
A56

A67=dh(0,0,0,theta7)
A67

A78=dh(0,0,0.18,theta8)
A78

T08=A01*A12*A23*A34*A45*A56*A67*A78
T08

# now adding transformation matrices from the base to the ith frame
T01=A01
T02=A01*A12
T03=A01*A12*A23
T04=A01*A12*A23*A34
T05=A01*A12*A23*A34*A45
T06=A01*A12*A23*A34*A45*A56
T07=A01*A12*A23*A34*A45*A56*A67
T07

#Initial Value assumption
tj = sym.Matrix([0,30,-45,0,75,0,0,0])*(pi/180)

#Final Transformation Matrix
T_VAL = T08.evalf(3, subs={theta1:tj[0],theta2:tj[1],theta3:tj[2],theta4:tj[3],theta5:tj[4],theta6:tj[5],theta7:tj[6],theta8:tj[7]})
T_VAL